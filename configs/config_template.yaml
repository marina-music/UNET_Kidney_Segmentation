wandb:
  log_gradients: true  # Log model gradients every few steps
  entity_name: "marinamusic-queen-s-university"
  project_name: "CT_Calyx_Segmentation"
  experiment_name: "Calyx_Segmentation_Run1"

data:
  image: "C:\\Users\\Marina.VALVE\\kits23\\final_for_unet\\images"
  label: "C:\\Users\\Marina.VALVE\\kits23\\final_for_unet\\labels"
  root_dir: "C:\\Users\\Marina.VALVE\\kits23\\final_for_unet"
  num_class: 2
  cache_rate: 1.0
  num_workers: 2

log:
  name: "CalyxSegmentationNet"
  save_dir: "C:\\Users\\Marina.VALVE\\GitHub\\UNET_Kidney_Segmentation\\weights"

loss:
  monai.losses.DiceCELoss:
    args: []
    kwargs:
      softmax: True
      to_onehot_y: True

net:
  monai.networks.nets.UNet:
    args: []
    kwargs:
      spatial_dims: 3
      in_channels: 1
      out_channels: 2
      channels: [16, 32, 64, 128, 256]
      strides: [2, 2, 2, 2]
      num_res_units: 2
      norm: "BATCH"


train:
  batch_size: 2
  val_batch_size: 1
  max_epochs: 30
  val_interval: 5
  lr_scheduler: "cosine_decay"
  learning_rate: 0.0001
  augmentation:
    - monai.transforms.LoadImaged:
        args: []
        kwargs:
          keys: ["image", "label"]
    - monai.transforms.EnsureChannelFirstd:
        args: []
        kwargs:
          keys: ["image", "label"]
    - monai.transforms.ScaleIntensityRanged:
        args: []
        kwargs:
          keys: ["image"]
          a_min: 0.0
          a_max: 255.0
          b_min: 0.0
          b_max: 1.0
          clip: true
    - monai.transforms.ScaleIntensityRanged:
        args: [ ]
        kwargs:
          keys: [ "label" ]
          a_min: 0.0
          a_max: 1.0
          b_min: 0.0
          b_max: 1.0
          clip: true
    - monai.transforms.CropForegroundd:
        args: []
        kwargs:
          keys: ["image", "label"]
          source_key: "image"
    - monai.transforms.Orientationd:
        args: []
        kwargs:
          keys: ["image", "label"]
          axcodes: "RAS"
    - monai.transforms.Spacingd:
        args: []
        kwargs:
          keys: ["image", "label"]
          pixdim: [1.5, 1.5, 2.0]
          mode: ["bilinear", "nearest"]
    - monai.transforms.SpatialPadd: #ResizeWithPadOrCrop:
        args: [ ]
        kwargs:
          keys: [ "image", "label" ]
          spatial_size: [160,160,160]
    - monai.transforms.ResizeD:
        args: []
        kwargs:
          keys:
          - image
          - label
          mode:
          - trilinear
          - nearest
          spatial_size: [160,160,160]
          
valid:
  roi_size: [160, 160, 160]  # Adjust dimensions as needed
  sw_batch_size: 4  
  augmentation:
    - monai.transforms.LoadImaged:
        args: []
        kwargs:
          keys: ["image", "label"]
    - monai.transforms.EnsureChannelFirstd:
        args: []
        kwargs:
          keys: ["image", "label"]
    - monai.transforms.ScaleIntensityRanged:
        args: []
        kwargs:
          keys: ["image"]
          a_min: -57
          a_max: 164
          b_min: 0.0
          b_max: 1.0
          clip: true
    - monai.transforms.CropForegroundd:
        args: []
        kwargs:
          keys: ["image", "label"]
          source_key: "image"
    - monai.transforms.Orientationd:
        args: []
        kwargs:
          keys: ["image", "label"]
          axcodes: "RAS"
    - monai.transforms.Spacingd:
        args: []
        kwargs:
          keys: ["image", "label"]
          pixdim: [1.5, 1.5, 2.0]
          mode: ["bilinear", "nearest"]


